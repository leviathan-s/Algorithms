문제 URL : https://www.acmicpc.net/problem/11725
Solution blog : https://velog.io/@dark6ro/백준-11725번-트리의-부모-찾기

import sys
import collections

tree = collections.defaultdict(list) # tree

# 입력을 받아 tree를 구성한다
node_num = int(sys.stdin.readline().rstrip())
for _ in range(node_num-1):
    ent = list(map(int,sys.stdin.readline().rstrip().split(' ')))
    tree[ent[0]].append(ent[1])
    tree[ent[1]].append(ent[0])
    
# 각 node의 parent node를 저장할 list생성
parent_node = [0 for _ in range(node_num)]
node_disc = [] # 이미 방문한 node

# tree를 BFS로 순회하면서 각 node의 부모노드를 결정한다
queue = collections.deque()
queue.append(1)
while len(queue) > 0:
    node = queue.popleft()
    for child in tree[node]:
        if node not in node_disc and parent_node[child-1] == 0:
            parent_node[child-1] = node
            queue.append(child)

# 2번 node의 parent node부터 순서대로 출력한다
for idx in range(1,node_num):
    print(parent_node[idx])
